{"ast":null,"code":"var _jsxFileName = \"/home/clemenz/Documents/seminar_presentation/code/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport { Chart } from \"react-google-charts\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pollData, setpollData] = useState({\n    amountSOAP: 0,\n    amountREST: 0,\n    amountRPC: 0,\n    amountPollsubmissions: 0\n  });\n\n  function fetchPollData() {\n    fetch(\"http://localhost:8000/pollSub\").then(response => response.json().then(data => {\n      setpollData(data);\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contaienr\",\n    children: [/*#__PURE__*/_jsxDEV(Chart, {\n      width: \"500px\",\n      height: \"300px\",\n      chartType: \"BarChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this),\n      data: [[\"\", \"poeple using it\"], [\"REST\", pollData.amountREST], [\"SOAP\", pollData.amountSOAP], [\"RPC\", pollData.amountRPC]],\n      options: {\n        title: \"Which kind of API did you use\",\n        chartArea: {\n          width: \"50%\"\n        },\n        hAxis: {\n          title: \"Total usage\",\n          minValue: 0\n        },\n        vAxis: {\n          title: \"APIs\"\n        }\n      } // For tests\n      ,\n      rootProps: {\n        \"data-testid\": \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => fetchPollData(),\n      children: \"fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"E99Z9f7PuzZLzglXxmTmoPJ+q4Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/clemenz/Documents/seminar_presentation/code/frontend/src/App.js"],"names":["Chart","useState","App","pollData","setpollData","amountSOAP","amountREST","amountRPC","amountPollsubmissions","fetchPollData","fetch","then","response","json","data","title","chartArea","width","hAxis","minValue","vAxis","e"],"mappings":";;;;AACA,SAASA,KAAT,QAAsB,qBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;AACxCI,IAAAA,UAAU,EAAE,CAD4B;AAExCC,IAAAA,UAAU,EAAE,CAF4B;AAGxCC,IAAAA,SAAS,EAAE,CAH6B;AAIxCC,IAAAA,qBAAqB,EAAE;AAJiB,GAAD,CAAxC;;AAOA,WAASC,aAAT,GAAyB;AACxBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CAAuCC,IAAvC,CAA6CC,QAAD,IAC3CA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,IAAD,IAAU;AAC9BV,MAAAA,WAAW,CAACU,IAAD,CAAX;AACA,KAFD,CADD;AAKA;;AACD,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC,QAAC,KAAD;AACC,MAAA,KAAK,EAAE,OADR;AAEC,MAAA,MAAM,EAAE,OAFT;AAGC,MAAA,SAAS,EAAC,UAHX;AAIC,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJT;AAKC,MAAA,IAAI,EAAE,CACL,CAAC,EAAD,EAAK,iBAAL,CADK,EAEL,CAAC,MAAD,EAASX,QAAQ,CAACG,UAAlB,CAFK,EAGL,CAAC,MAAD,EAASH,QAAQ,CAACE,UAAlB,CAHK,EAIL,CAAC,KAAD,EAAQF,QAAQ,CAACI,SAAjB,CAJK,CALP;AAWC,MAAA,OAAO,EAAE;AACRQ,QAAAA,KAAK,EAAE,+BADC;AAERC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAFH;AAGRC,QAAAA,KAAK,EAAE;AACNH,UAAAA,KAAK,EAAE,aADD;AAENI,UAAAA,QAAQ,EAAE;AAFJ,SAHC;AAORC,QAAAA,KAAK,EAAE;AACNL,UAAAA,KAAK,EAAE;AADD;AAPC,OAXV,CAsBC;AAtBD;AAuBC,MAAA,SAAS,EAAE;AAAE,uBAAe;AAAjB;AAvBZ;AAAA;AAAA;AAAA;AAAA,YADD,eA0BC;AAAQ,MAAA,OAAO,EAAGM,CAAD,IAAOZ,aAAa,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA8BA;;GA7CQP,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport { Chart } from \"react-google-charts\";\nimport { useState } from \"react\";\n\nimport \"./App.css\";\n\nfunction App() {\n\tconst [pollData, setpollData] = useState({\n\t\tamountSOAP: 0,\n\t\tamountREST: 0,\n\t\tamountRPC: 0,\n\t\tamountPollsubmissions: 0,\n\t});\n\n\tfunction fetchPollData() {\n\t\tfetch(\"http://localhost:8000/pollSub\").then((response) =>\n\t\t\tresponse.json().then((data) => {\n\t\t\t\tsetpollData(data);\n\t\t\t})\n\t\t);\n\t}\n\treturn (\n\t\t<div className=\"contaienr\">\n\t\t\t<Chart\n\t\t\t\twidth={\"500px\"}\n\t\t\t\theight={\"300px\"}\n\t\t\t\tchartType=\"BarChart\"\n\t\t\t\tloader={<div>Loading Chart</div>}\n\t\t\t\tdata={[\n\t\t\t\t\t[\"\", \"poeple using it\"],\n\t\t\t\t\t[\"REST\", pollData.amountREST],\n\t\t\t\t\t[\"SOAP\", pollData.amountSOAP],\n\t\t\t\t\t[\"RPC\", pollData.amountRPC],\n\t\t\t\t]}\n\t\t\t\toptions={{\n\t\t\t\t\ttitle: \"Which kind of API did you use\",\n\t\t\t\t\tchartArea: { width: \"50%\" },\n\t\t\t\t\thAxis: {\n\t\t\t\t\t\ttitle: \"Total usage\",\n\t\t\t\t\t\tminValue: 0,\n\t\t\t\t\t},\n\t\t\t\t\tvAxis: {\n\t\t\t\t\t\ttitle: \"APIs\",\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\t// For tests\n\t\t\t\trootProps={{ \"data-testid\": \"1\" }}\n\t\t\t/>\n\t\t\t<button onClick={(e) => fetchPollData()}>fetch</button>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}